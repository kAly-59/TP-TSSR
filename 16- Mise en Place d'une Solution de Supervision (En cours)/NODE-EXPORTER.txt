### 1. Configuration de Prometheus pour surveiller les nœuds clients

#### a. Ouverture du fichier prometheus.yml :
Sur le serveur de surveillance exécutant Prometheus, ouvrez le fichier prometheus.yml pour l'édition :

```bash
sudo nano /etc/prometheus/prometheus.yml
```

#### b. Ajout d'une nouvelle configuration de surveillance :
Repérez la section intitulée `scrape_configs`, qui contient une liste de jobs. Actuellement, il répertorie un seul job nommé `prometheus`. Ce job surveille la tâche Prometheus locale sur le port 9090.

Sous le job `prometheus`, ajoutez un deuxième job ayant le `job_name` de `remote_collector`. Incluez les informations suivantes :
- Un `scrape_interval` de 10s.
- À l'intérieur de `static_configs` dans l'attribut `targets`, ajoutez une liste entre crochets des adresses IP à surveiller. Séparez chaque entrée à l'aide d'une virgule.
- Ajoutez le numéro de port `:9100` à chaque adresse IP.
- Pour activer la surveillance du serveur local, ajoutez une entrée pour `localhost:9100` à la liste.

L'entrée devrait ressembler à l'exemple suivant. Remplacez `remote_addr` par l'adresse IP réelle du client.

```yaml
scrape_configs:
  - job_name: "prometheus"
    static_configs:
      - targets: ["localhost:9090"]
  - job_name: "remote_collector"
    scrape_interval: 10s
    static_configs:
      - targets: ["remote_addr:9100"] ip site + port 9876 si perso par exemple
```

#### c. Redémarrage du service Prometheus :
Pour rafraîchir immédiatement Prometheus avec les nouvelles configurations, redémarrez le service prometheus :

```bash
sudo systemctl restart prometheus
```

#### d. Vérification dans l'interface web de Prometheus :
À l'aide d'un navigateur web, revisitez le portail web de Prometheus sur le port 9090 sur le serveur de surveillance. Sélectionnez "Status" puis "Targets". Un deuxième lien pour le job `remote_collector` est affiché, menant au port 9100 sur le client. Cliquez sur le lien pour examiner les statistiques du Node Exporter sur le client.

### 2. Configuration de Nginx pour servir les métriques sur le port 9876

#### a. Ouverture du fichier de configuration Nginx :
Ouvrez le fichier de configuration Nginx :

```bash
sudo nano /etc/nginx/sites-available/default
```

#### b. Modification de la configuration pour proxyfier les requêtes `/metrics` :
Ajoutez une `location` block pour proxyfier les requêtes `/metrics` vers Prometheus qui tourne sur le port 9090.

```nginx
server {
    listen 80 default_server;
    listen [::]:80 default_server;

    listen 9876;
    server_name 192.168.25.50;

    root /var/www/html;
    index index.html index.htm index.nginx-debian.html;

    location / {
        try_files $uri $uri/ =404;
    }

    location /metrics {
        proxy_pass http://localhost:9090/metrics;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }
}
```

#### c. Enregistrement et sortie de Nano :
- Appuyez sur `Ctrl` + `O` pour enregistrer.
- Appuyez sur `Enter` pour confirmer.
- Appuyez sur `Ctrl` + `X` pour quitter.

#### d. Redémarrage de Nginx :
Redémarrez Nginx pour appliquer les nouvelles configurations :

```bash
sudo systemctl restart nginx
```

#### e. Vérification de la configuration Nginx :
Pour vous assurer que Nginx est configuré correctement et qu'il n'y a pas d'erreurs de configuration, exécutez :

```bash
sudo nginx -t
```

### Vérification finale :
Maintenant, accédez à `http://192.168.25.50:9876/metrics` dans votre navigateur pour vérifier que vous obtenez les métriques. Si tout fonctionne correctement, vous devriez voir les métriques Prometheus.